VERSION 0.7

build-derper:
    DO ../.udcs/image+GO
    DO ../.udcs/os/alpine+UPGRADE
    DO ../.udcs/os/alpine+INSTALL_BUILD_BASE
    
    ARG --required VERSION

    RUN --mount=type=cache,target=/go/pkg \
        go install -trimpath -ldflags "-w -s" tailscale.com/cmd/derper@${VERSION}

    SAVE ARTIFACT /go/bin/derper

build:
    FROM mritd/alpine

    DO ../.udcs/os/alpine+TIMEZONE
    DO ../.udcs/language/go+FIX_DNS

    ARG --required BUILD_DATE
    ARG --required VERSION

    ENV DERP_ADDR :8080
    ENV DERP_HTTP_PORT 8080
    ENV DERP_CONFIG /var/lib/derper/derper.key
    ENV DERP_DOMAIN your.domain.com
    ENV DERP_CERT_MODE letsencrypt
    ENV DERP_CERT_DIR /var/run/tailscale
    ENV DERP_STUN true
    ENV DERP_STUN_PORT 3456
    ENV DERP_VERIFY_CLIENTS true

    BUILD +build-derper --VERSION=${VERSION}

    COPY +build-derper/derper /usr/bin/derper
    COPY entrypoint.sh /entrypoint.sh

    EXPOSE 8080/tcp
    EXPOSE 3456/udp

    VOLUME ["/var/run/tailscale", "/var/lib/derper"]

    ENTRYPOINT ["/entrypoint.sh"]

    SAVE IMAGE --push mritd/derper:latest mritd/derper:${VERSION} mritd/derper:${VERSION}-${BUILD_DATE}

all:
    FROM mritd/alpine

    ARG BUILD_DATE=$(date "+%Y%m%d%H%M%S")
    ARG VERSION=$(curl -sSL "https://api.github.com/repos/tailscale/tailscale/releases/latest" | jq -r '.tag_name')

    BUILD --platform=linux/amd64 --platform=linux/arm64 +build --BUILD_DATE=${BUILD_DATE} --VERSION=${VERSION}
